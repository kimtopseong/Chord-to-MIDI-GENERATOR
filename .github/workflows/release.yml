name: Build, Release, and Update TUF Metadata

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  # ====================================================================
  # 1. 아키텍처별로 앱을 빌드하는 작업
  # ====================================================================
  build:
    name: Build - ${{ matrix.asset_suffix }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-14 # Apple Silicon Runner
            spec_file: mac.spec
            asset_suffix: mac-arm64
          - os: macos-13 # Intel Runner
            spec_file: mac.spec
            asset_suffix: mac-x86_64
          - os: windows-latest
            spec_file: win.spec
            asset_suffix: win-x86

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install --no-cache-dir -r requirements.txt
          
      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Create root.json from secret
        env:
          TUF_ROOT_JSON: ${{ secrets.TUF_ROOT_JSON }}
        run: echo "${{ secrets.TUF_ROOT_JSON }}" > root.json

      - name: Build with PyInstaller
        run: pyinstaller --noconfirm ${{ matrix.spec_file }}

      - name: Package the application
        shell: bash
        run: |
          VERSION="${{ github.ref_name }}"
          SUFFIX="${{ matrix.asset_suffix }}"
          ASSET_FILENAME="Chord-to-MIDI-GENERATOR-${VERSION}-${SUFFIX}.zip"
          
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            Compress-Archive -Path dist/* -DestinationPath "${ASSET_FILENAME}"
          else
            (cd dist && zip -r "../${ASSET_FILENAME}" .)
          fi
          
          echo "ASSET_PATH=${ASSET_FILENAME}" >> $GITHUB_ENV

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_suffix }}
          path: ${{ env.ASSET_PATH }}

  # ====================================================================
  # 2. 모든 빌드 파일을 모아 tufup 서명 후 최종 릴리즈하는 작업
  # ====================================================================
  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install tufup
        run: pip install tufup

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Create TUF key files from secrets
        run: |
          mkdir -p keys
          echo "${{ secrets.TUF_ROOT_KEY }}" > keys/root.key
          echo "${{ secrets.TUF_TARGETS_KEY }}" > keys/targets.key
          echo "${{ secrets.TUF_SNAPSHOT_KEY }}" > keys/snapshot.key
          echo "${{ secrets.TUF_TIMESTAMP_KEY }}" > keys/timestamp.key

      - name: Create and Sign TUF metadata for all artifacts
        run: |
          export VERSION=$(echo "${{ github.ref_name }}" | sed 's/^v//')
          
          # 각 빌드 결과물에 대해 targets add 실행
          TUF_KEY_PASSWORD=${{ secrets.TUF_TARGETS_KEY_PASSWORD }} tufup targets add "$VERSION" "artifacts/mac-arm64/Chord-to-MIDI-GENERATOR-${{ github.ref_name }}-mac-arm64.zip" keys
          TUF_KEY_PASSWORD=${{ secrets.TUF_TARGETS_KEY_PASSWORD }} tufup targets add "$VERSION" "artifacts/mac-x86_64/Chord-to-MIDI-GENERATOR-${{ github.ref_name }}-mac-x86_64.zip" keys
          TUF_KEY_PASSWORD=${{ secrets.TUF_TARGETS_KEY_PASSWORD }} tufup targets add "$VERSION" "artifacts/win-x86/Chord-to-MIDI-GENERATOR-${{ github.ref_name }}-win-x86.zip" keys

          # 모든 변경사항에 대해 서명
          TUF_KEY_PASSWORD=${{ secrets.TUF_TARGETS_KEY_PASSWORD }} tufup sign targets keys
          TUF_KEY_PASSWORD=${{ secrets.TUF_SNAPSHOT_KEY_PASSWORD }} tufup sign snapshot keys
          TUF_KEY_PASSWORD=${{ secrets.TUF_TIMESTAMP_KEY_PASSWORD }} tufup sign timestamp keys

      - name: Push metadata to gh-pages branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./repository
          publish_branch: gh-pages
          force_orphan: true

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*.zip
          draft: false
          prerelease: false