name: Build, Release, and Update TUF metadata

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build - ${{ matrix.asset_suffix }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-14
            spec_file: mac.spec
            asset_suffix: mac-arm64
          - os: macos-13
            spec_file: mac.spec
            asset_suffix: mac-x86_64
          - os: windows-latest
            spec_file: win.spec
            asset_suffix: win-x86

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Create root.json from secret (macOS)
        if: runner.os == 'macOS'
        run: echo "${{ secrets.TUF_ROOT_JSON }}" > root.json

      - name: Create root.json from secret (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        env:
          TUF_ROOT_JSON: ${{ secrets.TUF_ROOT_JSON }}
        run: Set-Content -LiteralPath root.json -Value $env:TUF_ROOT_JSON -Encoding utf8 -NoNewline

      - name: Build with PyInstaller
        run: pyinstaller --noconfirm ${{ matrix.spec_file }}

      - name: Package for macOS
        if: runner.os == 'macOS'
        shell: bash
        run: |
          VERSION="${{ github.ref_name }}"
          SUFFIX="${{ matrix.asset_suffix }}"
          ASSET="Chord-to-MIDI-GENERATOR-${VERSION}-${SUFFIX}.zip"
          (cd dist && zip -r "../${ASSET}" .)
          echo "ASSET_PATH=${ASSET}" >> $GITHUB_ENV

      - name: Package for Windows
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $VERSION = "${{ github.ref_name }}"
          $SUFFIX = "${{ matrix.asset_suffix }}"
          $ASSET  = "Chord-to-MIDI-GENERATOR-$VERSION-$SUFFIX.zip"
          Compress-Archive -Path dist\* -DestinationPath $ASSET -Force
          "ASSET_PATH=$ASSET" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_suffix }}
          path: ${{ env.ASSET_PATH }}

release:
  name: Create GitHub Release
  needs: build
  runs-on: ubuntu-latest
  permissions:
    contents: write

  steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install tufup
      run: pip install tufup

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/

    - name: Create TUF key files from secrets
      env:
        TUF_ROOT_KEY: ${{ secrets.TUF_ROOT_KEY }}
        TUF_TARGETS_KEY: ${{ secrets.TUF_TARGETS_KEY }}
        TUF_SNAPSHOT_KEY: ${{ secrets.TUF_SNAPSHOT_KEY }}
        TUF_TIMESTAMP_KEY: ${{ secrets.TUF_TIMESTAMP_KEY }}
      run: |
        mkdir -p keys
        printf "%s" "$TUF_ROOT_KEY" > keys/root
        printf "%s" "$TUF_TARGETS_KEY" > keys/targets
        printf "%s" "$TUF_SNAPSHOT_KEY" > keys/snapshot
        printf "%s" "$TUF_TIMESTAMP_KEY" > keys/timestamp

    # ✅ 대화형을 피하기 위해 repo 디렉터리를 미리 준비
    - name: Prepare TUF repository dirs (non-interactive)
      run: |
        mkdir -p repository/metadata repository/targets
        # root.json 시크릿을 쓰는 경우 초기 시드
        if [ -f root.json ]; then
          cp -f root.json repository/metadata/root.json
        fi

    - name: Create and Sign TUF metadata
      run: |
        VERSION="${GITHUB_REF_NAME#v}"

        tufup targets add "$VERSION" "artifacts/mac-arm64/Chord-to-MIDI-GENERATOR-${GITHUB_REF_NAME}-mac-arm64.zip"
        tufup targets add "$VERSION" "artifacts/mac-x86_64/Chord-to-MIDI-GENERATOR-${GITHUB_REF_NAME}-mac-x86_64.zip"
        tufup targets add "$VERSION" "artifacts/win-x86/Chord-to-MIDI-GENERATOR-${GITHUB_REF_NAME}-win-x86.zip"

        tufup sign targets
        tufup sign snapshot
        tufup sign timestamp

    - name: Push metadata to gh-pages branch
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./repository
        publish_branch: gh-pages
        force_orphan: true